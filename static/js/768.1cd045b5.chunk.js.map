{"version":3,"file":"static/js/768.1cd045b5.chunk.js","mappings":"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","sources":["routes/Detail.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Nav } from \"react-bootstrap\";\nimport { addCartItem } from \"../store/cartSlice\";\nimport { useDispatch } from 'react-redux';\n\nfunction Detail(props) {\n\n    let [fade2, setFade2] = useState('');\n\n    useEffect(() => {\n        let fadeTimer2 = setTimeout(() => { setFade2('end'); }, 10)\n        return () => {\n            clearTimeout(fadeTimer2);\n            setFade2('');\n        }\n    }, [])\n\n    useEffect(() => {\n        let a = setTimeout(() => { setAlert(false) }, 1000, [])\n\n        return () => {\n            clearTimeout(a);    // 기존 데이터 요청을 제거 (clean-up function)\n            // useEffect 동작 전에 실행됨\n        }\n    });\n\n    let { id } = useParams();\n    let found_id = props.info.find((x) => x.id == id) || {};\n    let [alert, setAlert] = useState(true);\n    let [tabNum, setTabNum] = useState(0);\n    let dispatch = useDispatch();\n\n    useEffect(() => {\n        const watched = JSON.parse(localStorage.getItem('watched')) || []; // 기존에 저장된 watched 값을 가져옴\n        const exists = watched.some((item) => item.id === found_id.id); // 현재 상품이 이미 watched에 존재하는지 확인\n    \n        if (!exists) {\n          watched.push({ id: found_id.id }); // 새로운 상품을 watched에 추가\n          localStorage.setItem('watched', JSON.stringify(watched)); // watched 값을 localStorage에 저장\n        }\n      }, [found_id]);    \n\n    return (\n        <div className={`container mt-5 start ${fade2}`}>\n            {\n                alert == true ?\n                    <div className=\"alert alert-warning\">\n                        1초이내 구매시 할인\n                    </div>\n                    : null\n            }\n            <div className=\"row\" style={{ display: 'flex', alignItems: 'center' }}>\n                <div className=\"col-md-6 mt-5\">\n                    <img src={process.env.PUBLIC_URL + '/laptop' + id + '.jpg'} className='img-fluid rounded' style={{ maxHeight: '500px' }} />\n                </div>\n                <div className=\"col-md-6 mt-2\">\n                    <h2 className=\"pt-5\">{found_id.title}</h2>\n                    <p style={{ fontSize: '1.5rem' }}>{found_id.content}</p>\n                    <p style={{ fontSize: '2rem', fontWeight: 'bold' }}>{found_id.price + '원'}</p>\n                    <button onClick={()=>{\n                        dispatch(addCartItem({\n                            id: found_id.id,\n                            name: found_id.title,\n                            count: 1\n                        }));\n                    }} className=\"btn btn-primary btn-lg\">장바구니에 추가</button>\n                </div>\n            </div>\n\n            <Nav className=\"mt-4\" variant=\"tabs\" defaultActiveKey=\"link0\">\n                <Nav.Item>\n                    <Nav.Link onClick={() => { setTabNum(0) }} eventKey=\"link0\" className={tabNum === 0 ? \"nav-link bg-success text-white active\" : \"nav-link\"}>버튼0</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link onClick={() => { setTabNum(1) }} eventKey=\"link1\" className={tabNum === 1 ? \"nav-link bg-success text-white active\" : \"nav-link\"}>버튼1</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link onClick={() => { setTabNum(2) }} eventKey=\"link2\" className={tabNum === 2 ? \"nav-link bg-success text-white active\" : \"nav-link\"}>버튼2</Nav.Link>\n                </Nav.Item>\n            </Nav>\n\n\n            <TabContent tabNum={tabNum} />\n\n\n\n\n        </div>\n    )\n}\n\nfunction TabContent({ tabNum }) {\n    let [fade, setFade] = useState('');\n\n    useEffect(() => {\n        let fadeTimer = setTimeout(() => { setFade('end'); }, 10)\n        return () => {\n            clearTimeout(fadeTimer);\n            setFade('');\n        }\n    }, [tabNum])\n\n    return (\n        <div className={`start ${fade}`}>\n            {[<div>내용0</div>, <div>내용1</div>, <div>내용2</div>][tabNum]}\n        </div>\n    );\n}\n\nexport default Detail;\n"],"names":["TabContent","_ref","tabNum","_useState7","useState","_useState8","_slicedToArray","fade","setFade","useEffect","fadeTimer","setTimeout","clearTimeout","_jsx","className","concat","children","props","_useState","_useState2","fade2","setFade2","fadeTimer2","a","setAlert","id","useParams","found_id","info","find","x","_useState3","_useState4","alert","_useState5","_useState6","setTabNum","dispatch","useDispatch","watched","JSON","parse","localStorage","getItem","some","item","push","setItem","stringify","_jsxs","style","display","alignItems","src","process","maxHeight","title","fontSize","content","fontWeight","price","onClick","addCartItem","name","count","Nav","variant","defaultActiveKey","eventKey"],"sourceRoot":""}